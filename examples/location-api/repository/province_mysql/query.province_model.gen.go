// Code generated by "cdd gen go-ds-mysql". DO NOT EDIT.
// source: repository/province_mysql/model.go

package province_mysql

import (
	"gorm.io/gorm"
	"time"
)

func (ProvinceModel) QueryGet(db *gorm.DB, id int) (*ProvinceModel, error) {
	result := &ProvinceModel{}
	err := db.Table("tbl_province").Where("id = ?", id).First(&result).Error
	return result, err
}

func (ProvinceModel) QueryGetAll(db *gorm.DB) ([]*ProvinceModel, error) {
	result := []*ProvinceModel{}
	err := db.Table("tbl_province").Find(&result).Error
	return result, err
}

func (ProvinceModel) QueryCreate(db *gorm.DB, in ProvinceModel) (*ProvinceModel, error) {
	timeNow := time.Now()
	in.CreatedAt = &timeNow
	in.UpdatedAt = &timeNow

	err := db.Table("tbl_province").Create(&in).Error
	if err != nil {
		return nil, err
	}
	return &in, nil
}

func (ProvinceModel) QueryUpdate(db *gorm.DB, in ProvinceModel) (*ProvinceModel, error) {
	timeNow := time.Now()
	in.CreatedAt = nil
	in.UpdatedAt = &timeNow
	err := db.Table("tbl_province").Where("id = ?", in.Id).Updates(&in).Error
	if err != nil {
		return nil, err
	}
	return &in, nil
}

func (ProvinceModel) QueryDelete(db *gorm.DB, id int) error {
	return db.Table("tbl_province").Delete(&ProvinceModel{}, "id = ?", id).Error
}
